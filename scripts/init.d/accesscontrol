#!/bin/bash
### BEGIN INIT INFO
# Provides:             accesscontrol
# Required-Start:       $remote_fs $syslog
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6 
# Short-Description:    Door Access Control System
### END INIT INFO

# Exit if any command returns exit code different than 0
set -e

# Redirect stdout to null
#exec &>/dev/null

SCRIPT=/usr/bin/accesscontrol.py
PIDFILE=/var/run/accesscontrol.pid
LOGFILE=/var/log/accesscontrol.log

start() {
    if [ -f $PIDFILE ] && kill -0 $(cat $PIDFILE); then
        echo 'Service already running' >&2
        return 1
    fi
    echo 'Starting Service...' >&2
    local CMD="$SCRIPT &> \"$LOGFILE\" & echo \$!"
    su -c "$CMD" $RUNAS > "$PIDFILE"
    echo "Service started" >&2
}

stop() {
    if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
        echo 'Service not running' >&2
        return 1
    fi
    echo 'Stopping service...' >&2
    kill -15 $(cat "$PIDFILE") && rm -f "$PIDFILE"
    echo 'Service stopped' >&2
}

reload() {
    if [ ! -f "$PIDFILE" ] || ! kill -0 $(cat "$PIDFILE"); then
        echo 'Service not running' >&2
        return 1
    fi
    echo 'Reloading configuration' >&2
    kill -1 $(cat "$PIDFILE")
    echo 'Done'
}

status() {
    if [ ! -f "$PIDFILE" ]  || ! kill -0 $(cat "$PIDFILE"); then
        echo 'Service not running' >&2
        return 1
    fi
    echo 'Service running. PID: '$(cat "$PIDFILE")
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    reload)
        reload
        ;;
    restart)
        stop
        start
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: $0 {start|stop|reload|restart|status}"
esac
